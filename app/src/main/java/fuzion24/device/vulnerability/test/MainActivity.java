package fuzion24.device.vulnerability.test;

import android.app.Activity;
import android.bluetooth.BluetoothClass;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ListView;
import android.widget.TextView;

import java.util.List;

import fuzion24.device.vulnerability.util.DeviceInfo;
import fuzion24.device.vulnerability.vulnerabilities.framework.media.StageFright;
import fuzion24.vulnerability.checker.R;


public class MainActivity extends Activity {

    private static final String LOG_TAG = "VULN_TEST";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        final ListView vulns =  (ListView) findViewById(R.id.vulnList);

        final TextView tvKernelVersion      =  (TextView) findViewById(R.id.kernelVersion);
        final TextView tvBuildFingerPrint   =  (TextView) findViewById(R.id.buildFingerPrint);
        final TextView tvBuildBrand         =  (TextView) findViewById(R.id.buildBrand);
        final TextView tvBuildModel         =  (TextView) findViewById(R.id.buildModel);
        final TextView tvBuildRelease       =  (TextView) findViewById(R.id.buildRelease);
        final TextView tvBuildSDK           =  (TextView) findViewById(R.id.buildSDK);


        DeviceInfo devInfo = DeviceInfo.getDeviceInfo();

        tvBuildFingerPrint.setText("Build FingerPrint: " + devInfo.getBuildFingerPrint());
        tvKernelVersion.setText("Kernel Version: " + devInfo.getKernelVersion());
        tvBuildBrand.setText("Build Brand: " + devInfo.getBuildBrand());
        tvBuildModel.setText("Build Model: " + devInfo.getBuildModel());
        tvBuildRelease.setText("Build Release: " + devInfo.getBuildRelease());
        tvBuildSDK.setText("Build SDK: " + devInfo.getBuildSDK());


        final Activity actCtx = this;
        new VulnerabilityTestRunner(this, true, new ResultsCallback() {
            @Override
            public void finished(List<VulnerabilityTestResult> results) {
                Log.d(LOG_TAG, "Device Vulnerability callback, finished");
                VulnerabilityListAdapter adapter = new VulnerabilityListAdapter(actCtx, results);
                vulns.setAdapter(adapter);
                adapter.notifyDataSetChanged();
            }
        }).execute();

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
